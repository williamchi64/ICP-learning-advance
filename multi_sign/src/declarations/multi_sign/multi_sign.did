type install_mode = 
 variant {
   install;
   reinstall;
   upgrade;
 };
type definite_canister_settings = 
 record {
   compute_allocation: nat;
   controllers: vec principal;
   freezing_threshold: nat;
   memory_allocation: nat;
 };
type canister_status = 
 record {
   cycles: nat;
   freezing_threshold: nat;
   memory_size: nat;
   module_hash: opt vec nat8;
   settings: definite_canister_settings;
   status: variant {
             running;
             stopped;
             stopping;
           };
 };
type canister_id = principal;
type anon_class_10_1 = 
 service {
   canister_status: (nat) -> (canister_status);
   create_canister: () -> (canister_id);
   delete_canister: (nat) -> (bool);
   get_canisters: () -> (List) query;
   install_code: (nat, blob, install_mode) -> (bool);
   start_canister: (nat) -> (bool);
   stop_canister: (nat) -> (bool);
 };
type List = 
 opt record {
       canister_id;
       List;
     };
service : () -> anon_class_10_1
